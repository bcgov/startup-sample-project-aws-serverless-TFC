name: ci_manual_Test  # manual pull 1

on:
  workflow_dispatch:

env:
  TF_VERSION: 1.0.5
  environment: dev

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: checkout the repo and building the Backend
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: building the backend
        run: |
          cd server/lambda
          npm install
          
      - name: Deploying back-end using terraform
        run: |
          cd server
          cat <<EOF > backend.hcl
          bucket = "${{ secrets.S3_BACKEND_NAME }}"
          key = "${{ secrets.LICENCEPLATE }}/${{ env.environment }}/serverless-app.tfstate"
          dynamodb_table = "terraform-remote-state-lock-${{ secrets.LICENCEPLATE }}"
          EOF
          terraform init -backend-config=backend.hcl
          terraform apply -auto-approve
          
      - name: Building front-end and deploying Frontend using terraform
        run: |
          cd server
          terraform output > ../client/.env
          cd ../client
          npm install
          CI=false npm run build
          cat <<EOF > backend.hcl
          bucket = "${{ secrets.S3_BACKEND_NAME }}"
          key = "${{ secrets.LICENCEPLATE }}/${{ env.environment }}/serverless-app.tfstate"
          dynamodb_table = "terraform-remote-state-lock-${{ secrets.LICENCEPLATE }}"
          EOF
          terraform init -backend-config=backend.hcl
          terraform apply -auto-approve
